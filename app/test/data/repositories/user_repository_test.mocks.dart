// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_tutoring_app/test/data/repositories/user_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i6;

import 'package:connectivity_plus/connectivity_plus.dart' as _i9;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i10;
import 'package:flutter_tutoring_app/data/datasources/local/user_cache_data_source.dart'
    as _i8;
import 'package:flutter_tutoring_app/data/datasources/remote/user_supabase_data_source.dart'
    as _i4;
import 'package:flutter_tutoring_app/data/models/user_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:supabase_flutter/supabase_flutter.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeChannel_1 extends _i1.SmartFake
    implements _i3.RealtimeChannel {
  _FakeRealtimeChannel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserSupabaseDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserSupabaseDataSource extends _i1.Mock
    implements _i4.UserSupabaseDataSource {
  MockUserSupabaseDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.UserModel?> getCurrentUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserProfile,
          [],
        ),
        returnValue: _i5.Future<_i2.UserModel?>.value(),
      ) as _i5.Future<_i2.UserModel?>);

  @override
  _i5.Future<_i2.UserModel?> getUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [userId],
        ),
        returnValue: _i5.Future<_i2.UserModel?>.value(),
      ) as _i5.Future<_i2.UserModel?>);

  @override
  _i5.Future<_i2.UserModel> updateUserProfile({
    required String? userId,
    String? fullName,
    String? phone,
    String? bio,
    Map<String, dynamic>? preferences,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [],
          {
            #userId: userId,
            #fullName: fullName,
            #phone: phone,
            #bio: bio,
            #preferences: preferences,
          },
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #updateUserProfile,
            [],
            {
              #userId: userId,
              #fullName: fullName,
              #phone: phone,
              #bio: bio,
              #preferences: preferences,
            },
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<String> uploadAvatar({
    required String? userId,
    required _i6.File? file,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadAvatar,
          [],
          {
            #userId: userId,
            #file: file,
          },
        ),
        returnValue: _i5.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #uploadAvatar,
            [],
            {
              #userId: userId,
              #file: file,
            },
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<void> deleteAvatar({
    required String? userId,
    required String? avatarUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAvatar,
          [],
          {
            #userId: userId,
            #avatarUrl: avatarUrl,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i2.UserModel>> searchUsers({
    String? query,
    String? role,
    int? limit = 20,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUsers,
          [],
          {
            #query: query,
            #role: role,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i5.Future<List<_i2.UserModel>>.value(<_i2.UserModel>[]),
      ) as _i5.Future<List<_i2.UserModel>>);

  @override
  _i5.Future<List<_i2.UserModel>> getTutors({
    String? subject,
    double? minRating,
    int? limit = 20,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTutors,
          [],
          {
            #subject: subject,
            #minRating: minRating,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i5.Future<List<_i2.UserModel>>.value(<_i2.UserModel>[]),
      ) as _i5.Future<List<_i2.UserModel>>);

  @override
  _i5.Future<void> updateTutorRating({
    required String? tutorId,
    required double? newRating,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTutorRating,
          [],
          {
            #tutorId: tutorId,
            #newRating: newRating,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> incrementTutorSessions(String? tutorId) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementTutorSessions,
          [tutorId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>?> getNotificationSettings(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationSettings,
          [userId],
        ),
        returnValue: _i5.Future<Map<String, dynamic>?>.value(),
      ) as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.Future<void> updateNotificationSettings({
    required String? userId,
    bool? emailEnabled,
    bool? pushEnabled,
    bool? smsEnabled,
    Map<String, dynamic>? categories,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotificationSettings,
          [],
          {
            #userId: userId,
            #emailEnabled: emailEnabled,
            #pushEnabled: pushEnabled,
            #smsEnabled: smsEnabled,
            #categories: categories,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> registerPushToken({
    required String? userId,
    required String? token,
    required String? deviceType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerPushToken,
          [],
          {
            #userId: userId,
            #token: token,
            #deviceType: deviceType,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deletePushToken({
    required String? userId,
    required String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePushToken,
          [],
          {
            #userId: userId,
            #token: token,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i3.RealtimeChannel subscribeToUserProfile(
    String? userId,
    void Function(_i2.UserModel)? onUpdate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeToUserProfile,
          [
            userId,
            onUpdate,
          ],
        ),
        returnValue: _FakeRealtimeChannel_1(
          this,
          Invocation.method(
            #subscribeToUserProfile,
            [
              userId,
              onUpdate,
            ],
          ),
        ),
      ) as _i3.RealtimeChannel);

  @override
  _i5.Future<void> unsubscribe(_i3.RealtimeChannel? channel) =>
      (super.noSuchMethod(
        Invocation.method(
          #unsubscribe,
          [channel],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [UserCacheDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserCacheDataSource extends _i1.Mock
    implements _i8.UserCacheDataSource {
  MockUserCacheDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> cacheProfile(Map<String, dynamic>? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheProfile,
          [profile],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> cacheProfiles(List<Map<String, dynamic>>? profiles) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheProfiles,
          [profiles],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateProfile(
    String? userId,
    Map<String, dynamic>? updates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [
            userId,
            updates,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>?> getProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [userId],
        ),
        returnValue: _i5.Future<Map<String, dynamic>?>.value(),
      ) as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getAllProfiles() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProfiles,
          [],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> searchTutors({
    String? query,
    String? subject,
    double? minRating,
    double? maxPrice,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTutors,
          [],
          {
            #query: query,
            #subject: subject,
            #minRating: minRating,
            #maxPrice: maxPrice,
          },
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getTutorsBySubject(String? subject) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTutorsBySubject,
          [subject],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getTopTutors({int? limit = 10}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopTutors,
          [],
          {#limit: limit},
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> deleteProfile(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteProfile,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearAllProfiles() => (super.noSuchMethod(
        Invocation.method(
          #clearAllProfiles,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> needsSync(
    String? userId, {
    int? minutesThreshold = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #needsSync,
          [userId],
          {#minutesThreshold: minutesThreshold},
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getStaleProfiles(
          {int? minutesThreshold = 30}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStaleProfiles,
          [],
          {#minutesThreshold: minutesThreshold},
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> updateSyncTimestamp(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #updateSyncTimestamp,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> getStats() => (super.noSuchMethod(
        Invocation.method(
          #getStats,
          [],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i9.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i10.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i5.Stream<_i10.ConnectivityResult>.empty(),
      ) as _i5.Stream<_i10.ConnectivityResult>);

  @override
  _i5.Future<_i10.ConnectivityResult> checkConnectivity() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkConnectivity,
          [],
        ),
        returnValue: _i5.Future<_i10.ConnectivityResult>.value(
            _i10.ConnectivityResult.bluetooth),
      ) as _i5.Future<_i10.ConnectivityResult>);
}
