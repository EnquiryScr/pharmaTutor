name: Frontend & Mobile Build and Deploy

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'flutter_tutoring_app/**'
      - '.github/workflows/frontend-mobile-workflow.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'flutter_tutoring_app/**'
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.16.0'
  NODE_VERSION: '18'

jobs:
  test-flutter:
    name: Flutter Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Get dependencies
      run: |
        cd flutter_tutoring_app
        flutter pub get
        
    - name: Run Flutter analyze
      run: |
        cd flutter_tutoring_app
        flutter analyze
        
    - name: Run Flutter tests
      run: |
        cd flutter_tutoring_app
        flutter test --coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./flutter_tutoring_app/coverage/lcov.info
        fail_ci_if_error: true
        
  build-android:
    name: Build Android App
    runs-on: ubuntu-latest
    needs: test-flutter
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Get dependencies
      run: |
        cd flutter_tutoring_app
        flutter pub get
        
    - name: Generate code
      run: |
        cd flutter_tutoring_app
        flutter packages pub run build_runner build --delete-conflicting-outputs
        
    - name: Build APK
      run: |
        cd flutter_tutoring_app
        flutter build apk --release --dart-define=ENV=production
        
    - name: Build App Bundle
      run: |
        cd flutter_tutoring_app
        flutter build appbundle --release --dart-define=ENV=production
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: flutter_tutoring_app/build/app/outputs/flutter-apk/app-release.apk
        
    - name: Upload App Bundle artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-app-bundle
        path: flutter_tutoring_app/build/app/outputs/bundle/release/app-release.aab
        
  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    needs: test-flutter
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Get dependencies
      run: |
        cd flutter_tutoring_app
        flutter pub get
        
    - name: Generate code
      run: |
        cd flutter_tutoring_app
        flutter packages pub run build_runner build --delete-conflicting-outputs
        
    - name: Build iOS
      run: |
        cd flutter_tutoring_app
        flutter build ios --release --dart-define=ENV=production
        
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-ipa
        path: flutter_tutoring_app/build/ios/iphoneos/ios/Archive/Release-iphoneos.ipa
        
  deploy-firebase:
    name: Deploy to Firebase App Distribution
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Android APK
      uses: actions/download-artifact@v4
      with:
        name: android-apk
        path: ./android-apk/
        
    - name: Download iOS IPA
      uses: actions/download-artifact@v4
      with:
        name: ios-ipa
        path: ./ios-ipa/
        
    - name: Setup Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Deploy to Firebase App Distribution
      run: |
        firebase appdistribution:distribute \
          ./android-apk/app-release.apk \
          --app ${{ secrets.FIREBASE_ANDROID_APP_ID }} \
          --groups "qa-team,stakeholders" \
          --release-notes-file ./release-notes.txt \
          --token ${{ secrets.FIREBASE_TOKEN }}
          
    - name: Deploy iOS to Firebase
      run: |
        firebase appdistribution:distribute \
          ./ios-ipa/ios/Archive/Release-iphoneos.ipa \
          --app ${{ secrets.FIREBASE_IOS_APP_ID }} \
          --groups "qa-team,stakeholders" \
          --release-notes-file ./release-notes.txt \
          --token ${{ secrets.FIREBASE_TOKEN }}
          
  deploy-play-store:
    name: Deploy to Google Play Store
    runs-on: ubuntu-latest
    needs: build-android
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download App Bundle
      uses: actions/download-artifact@v4
      with:
        name: android-app-bundle
        path: ./android-app-bundle/
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        
    - name: Install fastlane
      run: |
        cd mobile/fastlane
        bundle install
        
    - name: Deploy to Play Store
      run: |
        cd mobile/fastlane
        bundle exec fastlane android release
      env:
        GOOGLE_PLAY_JSON_KEY: ${{ secrets.GOOGLE_PLAY_JSON_KEY }}
        
  deploy-app-store:
    name: Deploy to Apple App Store
    runs-on: macos-latest
    needs: build-ios
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download IPA
      uses: actions/download-artifact@v4
      with:
        name: ios-ipa
        path: ./ios-ipa/
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        
    - name: Install fastlane
      run: |
        cd mobile/fastlane
        bundle install
        
    - name: Deploy to App Store
      run: |
        cd mobile/fastlane
        bundle exec fastlane ios release
      env:
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
        
  notification:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [deploy-firebase, deploy-play-store, deploy-app-store]
    if: always()
    
    steps:
    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}