name: pharmaT
description: Premium pharmacy tutoring platform with global PhD expertise and comprehensive learning features

version: 1.0.0+1

environment:
  sdk: '>=3.0.0 <4.0.0'
  flutter: ">=3.10.0"

dependencies:
  flutter:
    sdk: flutter

  # State Management
  provider: ^6.1.1

  # HTTP & Networking
  dio: ^5.4.0

  # Local Storage & Cache
  shared_preferences: ^2.2.2
  sqflite: ^2.3.0
  connectivity_plus: ^5.0.2

  # UI & Theme
  cupertino_icons: ^1.0.6

  # Utilities
  uuid: ^4.2.1
  equatable: ^2.0.5

  # Permission handling
  permission_handler: ^11.0.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # Linting
  flutter_lints: ^3.0.0

  # Code Generation
  json_serializable: ^6.7.1
  freezed: ^2.4.6
  freezed_annotation: ^2.4.1
  build_runner: ^2.4.7

  # Database code generation
  drift_dev: ^2.14.0

  # Testing
  bloc_test: ^9.1.4
  mockito: ^5.4.3

  # State management
  integration_test:
    sdk: flutter

  # Dependency injection
  get_it: ^7.6.4
  injectable: ^2.3.2

  # UI testing
  golden_toolkit: ^0.15.0

flutter:
  uses-material-design: true

  # Assets
  assets:
    - assets/images/
    - assets/icons/
    - assets/animations/
    - assets/sounds/
    - assets/data/

  # Fonts
  fonts:
    - family: Inter
      fonts:
        - asset: assets/fonts/Inter-Regular.ttf
        - asset: assets/fonts/Inter-Medium.ttf
          weight: 500
        - asset: assets/fonts/Inter-SemiBold.ttf
          weight: 600
        - asset: assets/fonts/Inter-Bold.ttf
          weight: 700

# Flutter configuration
flutter_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/icon/app_icon.png"
  min_sdk_android: 21

# Platform-specific configurations
flutter_native_splash:
  color: "#2196F3"
  image: "assets/icon/splash_icon.png"
  android_12:
    image: "assets/icon/splash_icon.png"
    color: "#2196F3"

# Dart analysis
analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
  errors:
    invalid_annotation_target: ignore

# Build configurations
build_runner:
  throw_on_dynamic_casts: true
  throw_on_unresolved_type: false

# Dependency overrides (use with caution)
dependency_overrides:
  http: ^1.1.0

# Firebase Configuration Notes:
# 1. Add google-services.json (Android) to android/app/
# 2. Add GoogleService-Info.plist (iOS) to ios/Runner/
# 3. Enable Authentication, Firestore, Storage, Functions in Firebase Console
# 4. Deploy security rules using: firebase deploy --only firestore:rules,storage
# 5. Configure Push Notification certificates for iOS
# 6. Set up Firebase Cloud Functions for server-side operations

# Security Notes:
# - Never commit API keys or sensitive configuration to version control
# - Use Firebase Remote Config for environment-specific settings
# - Implement proper Firestore security rules for data protection
# - Validate file uploads and sizes in security rules
# - Use Firebase App Check for additional security (optional)

# Performance Notes:
# - Use Firestore indexes for efficient queries
# - Implement pagination for large datasets
# - Cache frequently accessed data using Offline Sync Service
# - Use compression for file uploads when possible
# - Monitor Firebase usage and costs regularly

# Offline Support:
# - Offline sync is enabled by default
# - SQLite database automatically manages cached data
# - Sync queue handles offline operations when connection is restored
# - Configure cache sizes in FirebaseConfig if needed

# Testing Notes:
# - Use Firebase emulators for development
# - Mock Firebase services for unit testing
# - Implement integration tests for critical flows
# - Test offline functionality thoroughly

# Deployment Checklist:
# [ ] Update Firebase project configuration
# [ ] Deploy Firestore and Storage security rules
# [ ] Set up Firebase Cloud Functions (if needed)
# [ ] Configure push notifications
# [ ] Test authentication flows
# [ ] Verify offline synchronization
# [ ] Check analytics tracking
# [ ] Test error handling and crash reporting
# [ ] Validate file upload limits
# [ ] Review and test security rules