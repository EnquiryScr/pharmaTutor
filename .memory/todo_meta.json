{
  "todos": {
    "Coordinator": {
      "1": {
        "id": "1",
        "content": "Analyze existing data models and determine database schema",
        "details": "Review all models in lib/data/models/ (user, course, session, payment, message, notification) to understand structure and relationships",
        "status": "pending",
        "priority": "high"
      },
      "2": {
        "id": "2",
        "content": "Create database helper class with SQLite initialization",
        "details": "Create lib/core/database/database_helper.dart with:\n- Database creation and versioning\n- Table creation SQL statements\n- Open/close database methods\n- Migration system",
        "status": "pending",
        "priority": "high"
      },
      "3": {
        "id": "3",
        "content": "Create DAO (Data Access Object) classes for each model",
        "details": "Create CRUD operations for:\n- UserDAO (insert, update, delete, query users)\n- CourseDAO (manage courses)\n- SessionDAO (manage tutoring sessions)\n- PaymentDAO (payment records)\n- MessageDAO (chat messages)\n- NotificationDAO (user notifications)",
        "status": "pending",
        "priority": "high"
      },
      "4": {
        "id": "4",
        "content": "Update main.dart to initialize SQLite database",
        "details": "Add database initialization before app starts:\n- Import DatabaseHelper\n- Initialize database in main() function\n- Ensure proper initialization order with Hive",
        "status": "pending",
        "priority": "high"
      },
      "5": {
        "id": "5",
        "content": "Create database migration system",
        "details": "Implement onUpgrade callback for future schema changes and version management",
        "status": "pending",
        "priority": "medium"
      },
      "6": {
        "id": "6",
        "content": "Test database implementation",
        "details": "Verify:\n- Database file is created\n- Tables are created successfully\n- CRUD operations work correctly\n- App runs without errors",
        "status": "pending",
        "priority": "high"
      }
    }
  }
}