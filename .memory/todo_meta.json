{
  "todos": {
    "Coordinator": {
      "1": {
        "id": "1",
        "content": "Design Flutter MVVM architecture and project structure",
        "details": "Set up Flutter project with MVVM pattern, repository pattern, dependency injection, and API Gateway architecture. Include folder structure, core utilities, and base classes.",
        "status": "pending",
        "priority": "high"
      },
      "2": {
        "id": "2",
        "content": "Implement Supabase authentication integration",
        "details": "Set up Supabase client, implement all authentication features: email/password signup, email verification, password reset, JWT tokens, social login (Google, Apple, Facebook), 2FA, role-based access control, session management",
        "status": "pending",
        "priority": "high"
      },
      "3": {
        "id": "3",
        "content": "Set up Firebase integration for backend services",
        "details": "Configure Firebase for database, crashlytics, analytics, cloud messaging, and other backend features. Set up Firestore database structure for tutoring platform",
        "status": "pending",
        "priority": "high"
      },
      "4": {
        "id": "4",
        "content": "Build Node.js monolithic backend API",
        "details": "Create Express.js or similar monolithic backend with API Gateway, middleware for JWT verification, CRUD operations for tutoring features, and integration with Firebase and Supabase",
        "status": "pending",
        "priority": "high"
      },
      "5": {
        "id": "5",
        "content": "Implement core tutoring platform features",
        "details": "Build assignment management, query system, chat/messaging, article library, scheduling, payment processing, student-tutor communication features based on previous research",
        "status": "pending",
        "priority": "high"
      },
      "6": {
        "id": "6",
        "content": "Implement Flutter UI with MVVM architecture",
        "details": "Create Flutter screens, viewmodels, widgets for all tutoring features. Implement responsive design, navigation, state management, and user experience",
        "status": "pending",
        "priority": "high"
      },
      "7": {
        "id": "7",
        "content": "Add testing, deployment and final optimizations",
        "details": "Unit tests, integration tests, performance optimization, security hardening, deployment setup, and final debugging",
        "status": "pending",
        "priority": "medium"
      }
    }
  }
}